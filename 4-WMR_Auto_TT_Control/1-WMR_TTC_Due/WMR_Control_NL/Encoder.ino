
/* Encoder initialisation */
void EncoderInit()
{
  //Parameter setup
  Tc* pTc[] = { TC0, TC2 };
  uint32_t pin_num[] = { 2, 13, 5, 4};
  int i = 0;
  int j = 0;
  uint32_t ulPin = 0;

  // TC0 Channel0
  pmc_enable_periph_clk( TC_INTERFACE_ID );

  // TC0 Channel2
  pmc_enable_periph_clk( TC_INTERFACE_ID + 2);

  // TC2 Channel0
  pmc_enable_periph_clk( TC_INTERFACE_ID + 6 );

  // TC2 Channel2
  pmc_enable_periph_clk( TC_INTERFACE_ID + 8 );

  for (i = 0; i < 2; i++) {

    // Clear the registor of the timer
    for (j = 0; j < 3; j++) {
      /*  Disable TC clock */
      pTc[i]->TC_CHANNEL[j].TC_CCR = TC_CCR_CLKDIS ;
      /*  Disable interrupts */
      pTc[i]->TC_CHANNEL[j].TC_IDR = 0xFFFFFFFF;
      /*  Clear status register */
      pTc[i]->TC_CHANNEL[j].TC_SR;
    }

    // Enable qua mode
    pTc[i]->TC_BMR = TC_BMR_QDEN | TC_BMR_SPEEDEN
                     | TC_BMR_FILTER | TC_BMR_MAXFILT_Msk;
    // Set register for each Channel
    // Channel0 works at capture mode, and the clock is generated by each edge
    // of the bot PHA and PHB (encoder ouputs A and B in this case). Then the
    // time base signal generated by channel 2 will reset the counter then RA
    // will record the counts, which is the numbers of the edges occured during
    // the time base period.
    pTc[i]->TC_CHANNEL[0].TC_CMR = TC_CMR_TCCLKS_XC0
                                   | TC_CMR_ABETRG | TC_CMR_ETRGEDG_RISING
                                   | TC_CMR_LDRA_RISING | TC_CMR_LDRB_RISING;
    // this channel is counting the revolution, which is not provided by the
    // sensors, so it just need a general setup to fit the arctecture of this
    // mode
    pTc[i]->TC_CHANNEL[1].TC_CMR = TC_CMR_TCCLKS_XC0;
    // The Clock Frequency of Channel 2 is MCK/32 = 2625KHZ, When the counter
    // reaches 5250 counts, it will trigger the channel0 and clear the counter
    // in channel0
    pTc[i]->TC_CHANNEL[2].TC_CMR = TC_CMR_TCCLKS_TIMER_CLOCK3
                                   | TC_CMR_WAVE | TC_CMR_WAVSEL_UP_RC
                                   | TC_CMR_ACPC_TOGGLE;
    TC_SetRC( pTc[i], 2, 13125);

    // Pins configureing
    ulPin = pin_num[2 * i];
    PIO_Configure(g_APinDescription[ulPin].pPort,
                  g_APinDescription[ulPin].ulPinType,
                  g_APinDescription[ulPin].ulPin,
                  g_APinDescription[ulPin].ulPinConfiguration);
    ulPin = pin_num[2 * i + 1];
    PIO_Configure(g_APinDescription[ulPin].pPort,
                  g_APinDescription[ulPin].ulPinType,
                  g_APinDescription[ulPin].ulPin,
                  g_APinDescription[ulPin].ulPinConfiguration);
    // Start the channel0 and channel 1
    TC_Start(pTc[i], 0);
    TC_Start(pTc[i], 1);

    //Serial3.println("Encoder setup finished.");
  }  
}

